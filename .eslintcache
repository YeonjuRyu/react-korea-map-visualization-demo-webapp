[{"/Users/ryeonju/code/sw-demo-wepapp/src/index.js":"1","/Users/ryeonju/code/sw-demo-wepapp/src/App.js":"2","/Users/ryeonju/code/sw-demo-wepapp/src/listItems.js":"3","/Users/ryeonju/code/sw-demo-wepapp/src/Orders.js":"4","/Users/ryeonju/code/sw-demo-wepapp/src/Title.js":"5","/Users/ryeonju/code/sw-demo-wepapp/src/Choropleth.js":"6","/Users/ryeonju/code/sw-demo-wepapp/src/PieChartPage.js":"7","/Users/ryeonju/code/sw-demo-wepapp/src/BubblePage.js":"8","/Users/ryeonju/code/sw-demo-wepapp/src/PointPage.js":"9"},{"size":219,"mtime":1607885566958,"results":"10","hashOfConfig":"11"},{"size":801,"mtime":1607884996020,"results":"12","hashOfConfig":"11"},{"size":1388,"mtime":1607885837292,"results":"13","hashOfConfig":"11"},{"size":3659,"mtime":1607544739590,"results":"14","hashOfConfig":"11"},{"size":342,"mtime":1607885592078,"results":"15","hashOfConfig":"11"},{"size":12842,"mtime":1608228962777,"results":"16","hashOfConfig":"11"},{"size":11148,"mtime":1607890591670,"results":"17","hashOfConfig":"11"},{"size":11189,"mtime":1607947180608,"results":"18","hashOfConfig":"11"},{"size":10252,"mtime":1608543471808,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"kzt3fw",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ryeonju/code/sw-demo-wepapp/src/index.js",[],["44","45"],"/Users/ryeonju/code/sw-demo-wepapp/src/App.js",["46","47","48","49"],"import './App.css';\nimport Choropleth from './Choropleth';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PieChartPage from './PieChartPage';\nimport BubblePage from './BubblePage';\nimport PointPage from './PointPage';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/bubble\">\n          <BubblePage />\n        </Route>\n        <Route path=\"/point\">\n          <PointPage />\n        </Route>\n        <Route path=\"/pieChart\">\n          <PieChartPage />\n        </Route>\n        <Route path=\"/\">\n          <Choropleth />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\nexport default App;\n","/Users/ryeonju/code/sw-demo-wepapp/src/listItems.js",["50","51","52"],"import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nexport const mainListItems = (\n  <div>\n    <Link to={'/'}>\n      <ListItem button>\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"월별 방문 지역\" />\n      </ListItem>\n    </Link>\n    <Link to={'/pieChart'}>\n      <ListItem button>\n        <ListItemIcon>\n          <BarChartIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"국적별 방문 지역\" />\n      </ListItem>\n    </Link>\n    <Link to={'/bubble'}>\n      <ListItem button>\n        <ListItemIcon>\n          <LayersIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"시도별 평균 체제기간\" />\n      </ListItem>\n    </Link>\n    <Link to={'/point'}>\n      <ListItem button>\n        <ListItemIcon>\n          <PeopleIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"2019년 방문지\" />\n      </ListItem>\n    </Link>\n  </div>\n);\n","/Users/ryeonju/code/sw-demo-wepapp/src/Orders.js",[],"/Users/ryeonju/code/sw-demo-wepapp/src/Title.js",[],"/Users/ryeonju/code/sw-demo-wepapp/src/Choropleth.js",["53","54","55","56","57","58"],"import React, { useState, useEffect, useCallback } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems } from './listItems';\nimport Orders from './Orders';\nimport Title from './Title';\nimport { csv } from 'd3-request';\nimport { ChoroplethMap, ColorBar } from 'skmvtest';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        ReactKoeraMapVisualizationDemoWebapp\n      </Link>\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nlet dummyColorsGreen = [\n  { color: 'rgb(223,235,204)', level: 1 },\n  { color: 'rgb(180,217,205)', level: 2 },\n  { color: 'rgb(137,196,206)', level: 3 },\n  { color: 'rgb(101,178,207)', level: 4 },\n  { color: 'rgb(85,147,188)', level: 5 },\n  { color: 'rgb(68,116,167)', level: 6 },\n  { color: 'rgb(52,85,148)', level: 7 },\n  { color: 'rgb(36,55,129)', level: 8 },\n  { color: 'rgb(25,35,103)', level: 9 },\n  { color: 'rgb(17,24,72)', level: 10 }\n];\nlet dummyColorsBlue = [\n  { color: '#e1f5fe', level: 1 },\n  { color: '#b3e5fc', level: 2 },\n  { color: '#81d4fa', level: 3 },\n  { color: '#4fc3f7', level: 4 },\n  { color: '#29b6f6', level: 5 },\n  { color: '#03a9f4', level: 6 },\n  { color: '#039be5', level: 7 },\n  { color: '#0288d1', level: 8 },\n  { color: '#0277bd', level: 9 },\n  { color: '#01579b', level: 10 }\n];\nlet dummyColorsRed = [\n  { color: 'rgb(252,248,217)', level: 1 },\n  { color: 'rgb(249,227,125)', level: 2 },\n  { color: 'rgb(249,199,110)', level: 3 },\n  { color: 'rgb(231,170,95)', level: 4 },\n  { color: 'rgb(224,144,81)', level: 5 },\n  { color: 'rgb(217,117,67)', level: 6 },\n  { color: 'rgb(211,92,55)', level: 7 },\n  { color: 'rgb(163,78,50)', level: 8 },\n  { color: 'rgb(113,64,48)', level: 9 },\n  { color: 'rgb(72,53,49)', level: 10 }\n];\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 512\n  }\n}));\n\nexport default function ChoroplethPage() {\n  const [month, setMonth] = useState(12);\n  const [data, setData] = useState();\n  const [colorBarStyle, setColorBarStyle] = useState('discrete');\n  const [colors, setColors] = useState(dummyColorsRed);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  useEffect(() => {\n    csv(process.env.PUBLIC_URL + '/data_2019.csv', function(err, data) {\n      let obj_m = {};\n      ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'].map((month, monthNum) => {\n        let data_region = [];\n        data.map((region, index) => {\n          let obj = {};\n          obj['regionCode'] = region.region_code;\n          let keyName = `Q1_1_${monthNum + 1}_visited_region_${month}`;\n          obj['level'] = getlevel(region[keyName]);\n\n          data_region.push(obj);\n        });\n        obj_m[monthNum + 1] = data_region;\n      });\n      setData(obj_m);\n    });\n  }, []);\n\n  const getlevel = useCallback(data => {\n    if (data >= 800) {\n      return 10;\n    }\n    if (data >= 700) {\n      return 9;\n    }\n    if (data >= 600) {\n      return 8;\n    }\n    if (data >= 500) {\n      return 7;\n    }\n    if (data > 400) {\n      return 6;\n    }\n    if (data > 300) {\n      return 5;\n    }\n    if (data >= 200) {\n      return 4;\n    }\n    if (data >= 100) {\n      return 3;\n    }\n    if (data >= 20) {\n      return 2;\n    }\n    if (data < 20) {\n      return 1;\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   for (let i = 1; i <= 12; i++) {\n  //     setTimeout(() => {\n  //       setMonth(i);\n  //     }, 3000);\n  //   }\n  // }, []);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            한국 관광데이터 지도 시각화\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        {/* <Divider />\n                <List>{secondaryListItems}</List> */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={4} lg={8}>\n              <Paper className={fixedHeightPaper} style={{ alignContent: 'center', alignItems: 'center' }}>\n                <text style={{ textAlign: 'center', fontSize: 20 }}>{`한국여행 중 방문지역 2019년 ${month}월`}</text>\n                <div style={{ height: '100%' }}>\n                  <ColorBar\n                    data={colors}\n                    theme={colorBarStyle}\n                    colorBarContainerStyle={{ position: 'relative', left: '20%', top: 40, height: '30px' }}\n                    colorBarContentsStyle={{ border: '1px solid black', height: 20 }}\n                    gridGap={0}\n                    textStyle={{ fontSize: 8 }}\n                  />\n                  {data && data['1'] && (\n                    <ChoroplethMap\n                      data={data[month.toString()]}\n                      colors={colors}\n                      styledOnHover={{ backgroundColor: 'red' }}\n                      containerStyle={{ width: 500, height: 450, backgroundColor: 'white' }}\n                      isAdminLevelChanged={false}\n                      onZoomScaleChange={x => console.log('onZoomScaleChange', x)}\n                      onRegionHover={x => console.log('onRegionHover', x)}\n                    />\n                  )}\n                </div>\n                {/* <Scatter data={dummyData1} /> */}\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={4}>\n              <Paper className={fixedHeightPaper}>\n                <Title>데이터 옵션</Title>\n                <div\n                  style={{\n                    margin: '10px 0px 20px 0px',\n                    border: '1px solid black',\n                    padding: '10px',\n                    display: 'flex',\n                    justifyContent: 'space-around'\n                  }}\n                >\n                  <label for=\"month\" style={{ fontSize: 12 }}>\n                    달 선택:\n                  </label>\n                  <select\n                    name=\"month\"\n                    id=\"month\"\n                    onChange={event => {\n                      setMonth(event.target.value);\n                    }}\n                  >\n                    {Array.from({ length: 12 }, (_, i) => i + 1).map(month => (\n                      <option value={month}>{month}</option>\n                    ))}\n                  </select>\n                </div>\n                <Title>시각화 변형</Title>\n                <div style={{ margin: '10px 0px', border: '1px solid black', padding: '10px', display: 'flex', flexDirection: 'column' }}>\n                  <p style={{ fontSize: 12 }}>색상변경</p>\n                  <div>\n                    {colors.map((item, index) => {\n                      return (\n                        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', margin: '5px 0px' }}>\n                          <text style={{ fontSize: 12, marginRight: 12 }}>{`level ${item.level}: `}</text>\n                          <div style={{ height: 20, width: 40, margin: '0px 10px', backgroundColor: item.color }} />\n                          <input\n                            name=\"chk_info\"\n                            value={item.color}\n                            style={{ width: 130 }}\n                            onChange={t => {\n                              colors[index] = { color: t.target.value, level: item.level };\n                            }}\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                <div style={{ margin: '10px 0px', border: '1px solid black', padding: '10px', display: 'flex', flexDirection: 'column' }}>\n                  <label for=\"colorbar\" style={{ fontSize: 12 }}>\n                    Color bar 스타일 선택:\n                  </label>\n                  <select\n                    name=\"colorbar\"\n                    id=\"colorbar\"\n                    onChange={event => {\n                      setColorBarStyle(event.target.value);\n                    }}\n                  >\n                    {['discrete', 'gradient'].map((item, index) => (\n                      <option value={item}>{item}</option>\n                    ))}\n                  </select>\n                </div>\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","/Users/ryeonju/code/sw-demo-wepapp/src/PieChartPage.js",["59","60","61","62","63","64","65","66","67","68","69"],"import React, { useState, useEffect, useCallback } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems } from './listItems';\nimport Orders from './Orders';\nimport Title from './Title';\nimport { csv } from 'd3-request';\nimport { PieChart, ColorBar } from 'skmvtest';\nimport { PieChartMap } from 'skmvtest/dist';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nlet dummyData = [\n  { regionCode: '11', level: 1 },\n  { regionCode: '26', level: 1 },\n  { regionCode: '27', level: 1 },\n  { regionCode: '28', level: 1 },\n  { regionCode: '29', level: 1 },\n  { regionCode: '30', level: 1 },\n  { regionCode: '31', level: 1 },\n  { regionCode: '36', level: 1 },\n  { regionCode: '41', level: 1 },\n  { regionCode: '42', level: 1 },\n  { regionCode: '43', level: 1 },\n  { regionCode: '44', level: 1 },\n  { regionCode: '45', level: 1 },\n  { regionCode: '46', level: 1 },\n  { regionCode: '47', level: 1 },\n  { regionCode: '48', level: 1 },\n  { regionCode: '50', level: 1 },\n  { regionCode: '11110', level: 2 },\n  { regionCode: '11140', level: 1 },\n  { regionCode: '11500', level: 3 },\n  { regionCode: '48740', level: 2 }\n];\n\nlet dummyColors = [\n  { color: '#adcaff', level: 1 },\n  { color: '#6193f2', level: 2 },\n  { color: '#2e79ff', level: 3 },\n  { color: '#0048c9', level: 4 },\n  { color: '#002973', level: 5 }\n];\n\nlet dummyData1 = [\n  { lon: 126.9784147, lat: 37.5666805 },\n  { lon: 127.3784147, lat: 38.2666805 },\n  { lon: 128.3784147, lat: 36.466805 },\n  { lon: 129.16389, lat: 35.16083 },\n  { lon: 126.5389, lat: 37.16083 },\n  { lon: 127.17389, lat: 36.62083 },\n  { lon: 127.16389, lat: 35.46083 }\n];\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 512\n  }\n}));\n\nexport default function PieChartPage() {\n  const [month, setMonth] = useState(1);\n  const [data, setData] = useState();\n  const [colorBarStyle, setColorBarStyle] = useState(1);\n  const [colors, setColors] = useState(dummyColors);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  // useEffect(() => {\n  //   csv(process.env.PUBLIC_URL + '/data_2019.csv', function(err, data) {\n  //     let obj_m = {};\n  //     ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'].map((month, monthNum) => {\n  //       let data_region = [];\n  //       data.map((region, index) => {\n  //         let obj = {};\n  //         obj['regionCode'] = region.region_code;\n  //         let keyName = `Q1_1_${monthNum + 1}_visited_region_${month}`;\n  //         obj['level'] = getlevel(region[keyName]);\n\n  //         data_region.push(obj);\n  //       });\n  //       obj_m[monthNum + 1] = data_region;\n  //     });\n  //     setData(obj_m);\n  //   });\n  // }, []);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            한국 관광데이터 지도 시각화\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        {/* <Divider />\n                <List>{secondaryListItems}</List> */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={4} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <text>{`한국여행 중 방문지역 2019년 ${month}월`}</text>\n                {/* <PieChartMap /> */}\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Title>데이터 옵션</Title>\n                <div\n                  style={{\n                    margin: '10px 0px 20px 0px',\n                    border: '1px solid black',\n                    padding: '10px',\n                    display: 'flex',\n                    justifyContent: 'space-around'\n                  }}\n                >\n                  <label for=\"month\" style={{ fontSize: 12 }}>\n                    달 선택:\n                  </label>\n                  <select\n                    name=\"month\"\n                    id=\"month\"\n                    onChange={event => {\n                      setMonth(event.target.value);\n                    }}\n                  >\n                    {Array.from({ length: 12 }, (_, i) => i + 1).map(month => (\n                      <option value={month}>{month}</option>\n                    ))}\n                  </select>\n                </div>\n                <Title>시각화 변형</Title>\n                <div style={{ margin: '10px 0px', border: '1px solid black', padding: '10px', display: 'flex', flexDirection: 'column' }}>\n                  <p style={{ fontSize: 12 }}>색상변경</p>\n                  <div>\n                    {colors.map((item, index) => {\n                      return (\n                        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', margin: '5px 0px' }}>\n                          <text style={{ fontSize: 12, marginRight: 12 }}>{`level ${item.scale}: `}</text>\n                          <div style={{ height: 20, width: 40, margin: '0px 10px', backgroundColor: item.color }} />\n                          <input\n                            name=\"chk_info\"\n                            value={item.color}\n                            style={{ width: 60 }}\n                            onChangeEnd={t => {\n                              let newC = colors;\n                              newC[index] = { color: t.target.value, level: item.level };\n                              setColors(newC);\n                            }}\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                <div style={{ margin: '10px 0px', border: '1px solid black', padding: '10px', display: 'flex', flexDirection: 'column' }}>\n                  <label for=\"colorbar\" style={{ fontSize: 12 }}>\n                    Color bar 스타일 선택:\n                  </label>\n                  <select\n                    name=\"colorbar\"\n                    id=\"colorbar\"\n                    onChange={event => {\n                      setColorBarStyle(event.target.value);\n                    }}\n                  >\n                    {['discrete', 'gradient'].map((item, index) => (\n                      <option value={item}>{item}</option>\n                    ))}\n                  </select>\n                </div>\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","/Users/ryeonju/code/sw-demo-wepapp/src/BubblePage.js",["70","71","72","73","74","75","76","77"],"import React, { useState, useEffect, useCallback } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems } from './listItems';\nimport Orders from './Orders';\nimport Title from './Title';\nimport { csv } from 'd3-request';\nimport { BubbleMap } from 'skmvtest';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nlet dummyData = [\n  {\n    regionCode: 11,\n    component: (\n      <div\n        style={{\n          width: 60,\n          height: 60,\n          borderRadius: 35,\n          border: '1px solid rgb(180,0,180)',\n          backgroundColor: 'rgba(180,0,180,0.5)'\n        }}\n      />\n    )\n  },\n  { lon: 127.9784147, lat: 37.5666808 },\n  { lon: 127.3784145, lat: 38.266681 },\n  { lon: 128.3784144, lat: 36.466805 },\n  { lon: 127.17389, lat: 36.62083 },\n  { lon: 127.16389, lat: 35.46083 }\n];\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 512\n  }\n}));\n\nexport default function BubblePage() {\n  const [month, setMonth] = useState(1);\n  const [data, setData] = useState();\n  const [hovered, setHovered] = useState();\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  useEffect(() => {\n    csv(process.env.PUBLIC_URL + '/data_2019.csv', function(err, data) {\n      let obj_m = {};\n      ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'].map((month, monthNum) => {\n        let data_region = [];\n        data.map((region, index) => {\n          if (region.region_code && region.region_code.length === 2) {\n            let obj = {};\n            obj['regionCode'] = region.region_code;\n            let keyName = `Q2_1_${monthNum + 1}_stay_days_${month}`;\n            obj['name'] = region.Name;\n            let r = Number(region[keyName]) * 5;\n            obj['value'] = r / 5;\n            data_region.push(obj);\n            let style = { width: r, height: r, borderRadius: r / 2, backgroundColor: 'rgba(255,0,0,0.5)', border: '1px solid red' };\n            let positionStyle = {};\n            if (region.region_code == 41) {\n              positionStyle['marginBottom'] = 30;\n            } else if (region.region_code == 46) {\n              positionStyle['marginTop'] = 30;\n              positionStyle['marginLeft'] = 30;\n            } else if (region.region_code == 36) {\n              positionStyle['marginBottom'] = 20;\n            } else if (region.region_code == 30) {\n              positionStyle['marginTop'] = 30;\n            } else if (region.region_code == 44) {\n              positionStyle['marginRight'] = 30;\n            }\n            obj['component'] = (\n              <div style={positionStyle}>\n                {/* <div style={{ position: 'fixed', width: 100, top: '0%', left: '0%', transform: 'translate(-50%, -50%)' }}>\n                   <text style={{ fontSize: 10 }}>{region.Name}</text>\n                   <text style={{ fontSize: 10 }}>{Number(region[keyName])}</text>\n                 </div> */}\n                <div style={style} />\n              </div>\n            );\n          }\n        });\n        obj_m[monthNum + 1] = data_region;\n      });\n      setData(obj_m);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   for (let i = 1; i <= 12; i++) {\n  //     setTimeout(() => {\n  //       setMonth(i);\n  //     }, 3000);\n  //   }\n  // }, []);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            한국 관광데이터 지도 시각화\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        {/* <Divider />\n                <List>{secondaryListItems}</List> */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={4} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                {\n                  <div>\n                    <BubbleMap\n                      containerStyle={{ backgroundColor: 'rgb(174,209,239)' }}\n                      backgroundColor={'rgb(240,240,240)'}\n                      borderColor={'rgba(0,0,0,0.3)'}\n                      onBubbleHovered={setHovered}\n                      data={data ? data[`${month}`] : dummyData}\n                      bubbleStyle={{\n                        borderRadius: 100,\n                        backgroundColor: 'rgba(255,0,0,0.5)',\n                        border: '1px solid red'\n                      }}\n                    />\n                    {hovered?.properties && (\n                      <div\n                        style={{\n                          position: 'fixed',\n                          top: hovered?.clientY,\n                          left: hovered?.clientX,\n                          backgroundColor: 'beige',\n                          alignSelf: 'baseline',\n                          height: 20,\n                          borderRadius: 5\n                        }}\n                      >\n                        {`${hovered.properties.name}, ${hovered.properties.value.toFixed(2)}일`}\n                      </div>\n                    )}\n                  </div>\n                }\n                {/* {console.log(data['1'])} */}\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Title>데이터 옵션</Title>\n                <div\n                  style={{\n                    margin: '10px 0px 20px 0px',\n                    border: '1px solid black',\n                    padding: '10px',\n                    display: 'flex',\n                    justifyContent: 'space-around'\n                  }}\n                >\n                  <label for=\"month\" style={{ fontSize: 12 }}>\n                    달 선택:\n                  </label>\n                  <select\n                    name=\"month\"\n                    id=\"month\"\n                    onChange={event => {\n                      setMonth(event.target.value);\n                    }}\n                  >\n                    {Array.from({ length: 12 }, (_, i) => i + 1).map(month => (\n                      <option value={month}>{month}</option>\n                    ))}\n                  </select>\n                </div>\n                <Title>시각화 변형</Title>\n                <div style={{ margin: '10px 0px', border: '1px solid black', padding: '10px', display: 'flex', flexDirection: 'column' }}>\n                  <p style={{ fontSize: 12 }}>색상변경</p>\n                </div>\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","/Users/ryeonju/code/sw-demo-wepapp/src/PointPage.js",["78","79","80","81","82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":50,"nodeType":"90","messageId":"91","endLine":3,"endColumn":54},{"ruleId":"88","severity":1,"message":"92","line":29,"column":10,"nodeType":"90","messageId":"91","endLine":29,"endColumn":14},{"ruleId":"88","severity":1,"message":"93","line":33,"column":10,"nodeType":"90","messageId":"91","endLine":33,"endColumn":15},{"ruleId":"88","severity":1,"message":"94","line":37,"column":10,"nodeType":"90","messageId":"91","endLine":37,"endColumn":15},{"ruleId":"88","severity":1,"message":"95","line":9,"column":27,"nodeType":"90","messageId":"91","endLine":9,"endColumn":33},{"ruleId":"88","severity":1,"message":"96","line":9,"column":35,"nodeType":"90","messageId":"91","endLine":9,"endColumn":41},{"ruleId":"88","severity":1,"message":"97","line":9,"column":43,"nodeType":"90","messageId":"91","endLine":9,"endColumn":48},{"ruleId":"88","severity":1,"message":"98","line":40,"column":5,"nodeType":"90","messageId":"91","endLine":40,"endColumn":21},{"ruleId":"88","severity":1,"message":"99","line":52,"column":5,"nodeType":"90","messageId":"91","endLine":52,"endColumn":20},{"ruleId":"88","severity":1,"message":"100","line":162,"column":18,"nodeType":"90","messageId":"91","endLine":162,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":176,"column":114,"nodeType":"103","messageId":"104","endLine":176,"endColumn":116},{"ruleId":"101","severity":1,"message":"102","line":178,"column":34,"nodeType":"103","messageId":"104","endLine":178,"endColumn":36},{"ruleId":"105","severity":1,"message":"106","line":190,"column":6,"nodeType":"107","endLine":190,"endColumn":8,"suggestions":"108"},{"ruleId":"88","severity":1,"message":"109","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"110","line":1,"column":38,"nodeType":"90","messageId":"91","endLine":1,"endColumn":49},{"ruleId":"88","severity":1,"message":"111","line":24,"column":10,"nodeType":"90","messageId":"91","endLine":24,"endColumn":13},{"ruleId":"88","severity":1,"message":"112","line":25,"column":10,"nodeType":"90","messageId":"91","endLine":25,"endColumn":18},{"ruleId":"88","severity":1,"message":"113","line":25,"column":20,"nodeType":"90","messageId":"91","endLine":25,"endColumn":28},{"ruleId":"88","severity":1,"message":"114","line":26,"column":10,"nodeType":"90","messageId":"91","endLine":26,"endColumn":21},{"ruleId":"88","severity":1,"message":"115","line":41,"column":5,"nodeType":"90","messageId":"91","endLine":41,"endColumn":14},{"ruleId":"88","severity":1,"message":"116","line":73,"column":5,"nodeType":"90","messageId":"91","endLine":73,"endColumn":15},{"ruleId":"88","severity":1,"message":"117","line":166,"column":10,"nodeType":"90","messageId":"91","endLine":166,"endColumn":14},{"ruleId":"88","severity":1,"message":"118","line":166,"column":16,"nodeType":"90","messageId":"91","endLine":166,"endColumn":23},{"ruleId":"88","severity":1,"message":"119","line":167,"column":10,"nodeType":"90","messageId":"91","endLine":167,"endColumn":23},{"ruleId":"88","severity":1,"message":"110","line":1,"column":38,"nodeType":"90","messageId":"91","endLine":1,"endColumn":49},{"ruleId":"101","severity":1,"message":"102","line":159,"column":114,"nodeType":"103","messageId":"104","endLine":159,"endColumn":116},{"ruleId":"101","severity":1,"message":"102","line":161,"column":34,"nodeType":"103","messageId":"104","endLine":161,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":172,"column":36,"nodeType":"122","messageId":"123","endLine":172,"endColumn":38},{"ruleId":"120","severity":1,"message":"121","line":174,"column":43,"nodeType":"122","messageId":"123","endLine":174,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":177,"column":43,"nodeType":"122","messageId":"123","endLine":177,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":179,"column":43,"nodeType":"122","messageId":"123","endLine":179,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":181,"column":43,"nodeType":"122","messageId":"123","endLine":181,"endColumn":45},{"ruleId":"88","severity":1,"message":"110","line":1,"column":38,"nodeType":"90","messageId":"91","endLine":1,"endColumn":49},{"ruleId":"88","severity":1,"message":"115","line":40,"column":5,"nodeType":"90","messageId":"91","endLine":40,"endColumn":14},{"ruleId":"88","severity":1,"message":"124","line":64,"column":5,"nodeType":"90","messageId":"91","endLine":64,"endColumn":16},{"ruleId":"88","severity":1,"message":"116","line":72,"column":5,"nodeType":"90","messageId":"91","endLine":72,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":181,"column":30,"nodeType":"103","messageId":"104","endLine":181,"endColumn":32},{"ruleId":"125","severity":1,"message":"126","line":182,"column":19,"nodeType":"127","messageId":"128","endLine":182,"endColumn":31},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'About' is defined but never used.","'Users' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'dummyColorsGreen' is assigned a value but never used.","'dummyColorsBlue' is assigned a value but never used.","'setColors' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getlevel'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'useEffect' is defined but never used.","'useCallback' is defined but never used.","'csv' is defined but never used.","'PieChart' is defined but never used.","'ColorBar' is defined but never used.","'PieChartMap' is defined but never used.","'dummyData' is assigned a value but never used.","'dummyData1' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'colorBarStyle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'dummyColors' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [getlevel]",{"range":"134","text":"135"},[5803,5805],"[getlevel]"]